version: 2

jobs:
  build:
    parallelism: 2
    docker:
      - image: ruby:2.4.2
        environment:
          - PG_HOST=localhost
          - PG_USER=ubuntu
          - RAILS_ENV=test
          - RACK_ENV=test
          - DATABASE_URL=postgres://ubuntu@localhost:5432/mercury
      - image: postgres
        environment:
          - POSTGRES_USER=ubuntu
          - POSTGRES_DB=mercury
      - image: redis
    steps:
      # Setup
      - checkout
      - type: cache-restore
        key: mercury-{{ checksum "Gemfile.lock" }}
      - run: bundle check --path vendor/bundle || bundle install --path vendor/bundle
      - type: cache-save
        key: mercury-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle
      - run: cp config/application.example.yml config/application.yml
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # Testing
      - type: shell
        command: |
          bundle exec rspec --profile 10 \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            --no-color \
                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - type: store_test_results
        path: /tmp/test-results

      # Heroku Deployment
      - run: bash .circleci/setup-heroku.sh
      - add_ssh_keys:
          fingerprints:
            - "31:50:dd:6a:cd:48:95:23:30:41:8a:d0:08:de:15:99"
      - deploy:
          name: Deploy to Heroku
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              git push heroku-production master
            fi

            if [ "${CIRCLE_BRANCH}" == "staging" ]; then
              git push heroku-staging staging:master
            fi

            if [ "${CIRCLE_BRANCH}" == "develop" ]; then
              git push heroku-dev develop:master
            fi

      # EB Deployment
      - deploy:
          name: Deploy to EB
          command: |
            if [ "${CIRCLE_BRANCH}" == "develop" ]; then
              bash .circleci/setup-eb.sh
              apt-get install python-pip
              pip install ebcli
              eb deploy develop
            fi
